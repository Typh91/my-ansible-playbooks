- hosts: sii-pro-batch, sii-pro-web, sii-pro-proc, sii-pro-obsidian
  vars:
    env: "{{ lookup('env','AZURE_SII_ENV') }}"
    nfs_server: 172.23.152.4
    exports:
      - { export: "sii-xa", path: /var/cache/sii/xa, filename: var-cache-sii-xa }
      - { export: "sii-b2bdocs-lros", path: /var/cache/sii/b2bdocs/LROS, filename: var-cache-sii-b2bdocs-LROS }
      - { export: "sii-b2bdocs-lroav", path: /var/cache/sii/b2bdocs/LROAV, filename: var-cache-sii-b2bdocs-LROAV }
      - { export: "sii-b2bdocs-lrfr", path: /var/cache/sii/b2bdocs/LRFR, filename: var-cache-sii-b2bdocs-LRFR }
      - { export: "sii-b2bdocs-lrfe", path: /var/cache/sii/b2bdocs/LRFE, filename: var-cache-sii-b2bdocs-LRFE }
      - { export: "sii-b2bdocs-lrdoi", path: /var/cache/sii/b2bdocs/LRDOI, filename: var-cache-sii-b2bdocs-LRDOI }
      - { export: "sii-b2bdocs-unknown", path: /var/cache/sii/b2bdocs/UNKNOWN_FAMILY, filename: var-cache-sii-b2bdocs-UNKNOWN_FAMILY }
      - { export: "sii-b2bdocs-lrcm", path: /var/cache/sii/b2bdocs/LRCM, filename: var-cache-sii-b2bdocs-LRCM }
      - { export: "sii-b2bdocs-lrbi", path: /var/cache/sii/b2bdocs/LRBI, filename: var-cache-sii-b2bdocs-LRBI }
      - { export: "sii-b2bdocs-docsdivisionpath", path: /var/cache/sii/b2bdocs/docsdivisionpath, filename: var-cache-sii-b2bdocs-docsdivisionpath.mount }
  tasks:
  - name: create systemd mount for old nfs mounts
    tags: [nfs_backup]
    with_items: "{{ exports }}"
    copy:
      dest: "/etc/systemd/system/{{ item.filename }}.mount"
      mode: 0644
      owner: root
      group: root
      content: |
        [Unit]
        Description={{ item.path }} directory
        
        [Mount]
        What={{ nfs_server }}:/export/sii-pro-workspace/sii-pro-workstorage-vol/{{ item.export }}
        Where={{ item.path }}
        Type=nfs4
        Options=rsize=8192,wsize=8192,intr,_netdev

        [Install]
        WantedBy=multi-user.target


  - name: enable and start mount point for old nfs mounts
    tags: [nfs_backup]
    with_items: "{{ exports }}"
    systemd:
      name: "{{ item.filename }}.mount"
      daemon_reload: yes
      enabled: yes
      state: started